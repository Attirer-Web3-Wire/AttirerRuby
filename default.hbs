<!DOCTYPE html>
<html lang="{{@site.locale}}" class="{{#if @custom.enable_dark_mode}} is-darkModeAdminSetting-enabled {{/if}}">

<!-- Weglot translations -->
<link rel="alternate" hreflang="x-default" href="https://www.attirer.io">
<link rel="alternate" hreflang="en" href="https://www.attirer.io">
<link rel="alternate" hreflang="fr" href="https://fr.attirer.io">
<link rel="alternate" hreflang="de" href="https://de.attirer.io">
<link rel="alternate" hreflang="pt" href="https://pt.attirer.io">
<link rel="alternate" hreflang="es" href="https://es.attirer.io">
<link rel="alternate" hreflang="zh" href="https://zh.attirer.io">
<link rel="alternate" hreflang="ar" href="https://ar.attirer.io">
<link rel="alternate" hreflang="ja" href="https://ja.attirer.io">
<link rel="alternate" hreflang="ko" href="https://ko.attirer.io">
<link rel="alternate" hreflang="tr" href="https://tr.attirer.io">
<link rel="alternate" hreflang="zh-tw" href="https://zh-tw.attirer.io">
<link rel="alternate" hreflang="it" href="https://it.attirer.io">
<link rel="alternate" hreflang="th" href="https://th.attirer.io">
<link rel="alternate" hreflang="id" href="https://id.attirer.io">
<link rel="alternate" hreflang="nl" href="https://nl.attirer.io">
<link rel="alternate" hreflang="hi" href="https://hi.attirer.io">
<script type="text/javascript" src="https://cdn.weglot.com/weglot.min.js">
</script>
<script>
    Weglot.initialize({
        api_key: 'wg_277f3f59c1cd31ddb4b9c7b5b4acaf8a9'
    });
</script>

<head>

   {{!-- Document Settings --}}
    <meta charset="utf-8">
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />     
    {{!-- Base Meta --}}   
    <title>{{meta_title}}</title>
   
    {{!-- Styles'n'Scripts --}}      
    {{!-- <link rel="stylesheet" href="{{asset "built/screen.css"}}">
    <link rel="stylesheet" type="text/css" href="{{asset "built/theme.css"}}" /> --}}
    <link rel="stylesheet" type="text/css" href="{{asset "built/main.css"}}" />
   
  {{!-- <link rel="preconnect" href="https://fonts.gstatic.com">
   <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet">  --}}


  {{#if @custom.enable_dark_mode}}
    {{> dark-mode-accent-color }}
    {{> dark-mode-js }}
  {{/if}}

  <script>
    var pagination_next_page_number       = '{{ pagination.next }}',
        pagination_available_pages_number = '{{ pagination.pages }}',
        pagination_loading_text           = '{{t "Loading" }}',
        pagination_more_posts_text        = '{{t "Load More" }}',
        dark_mode_label_text              = '{{t "Dark" }}',
        light_mode_label_text             = '{{t "Light" }}';

    document.documentElement.classList.add('js-on');
  </script>

    {{ghost_head}}

</head>
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=AW-10857397969"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'AW-10857397969');
</script>
<body class="{{body_class}}{{{block "body_class"}}}">
    <div class="site">

        {{> header}}
        <div class="site-content">
            {{{body}}}
        </div>
        {{> footer}}
    </div>

    {{> off-canvas}}
    {{> pswp}}


<script async src="https://code.jquery.com/jquery-3.3.1.min.js"
        integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous">
        </script>
  
   <script async src="{{asset "built/main.min.js"}}"></script>

    {{{block "scripts"}}}
    
    {{ghost_foot}}
</body>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Create a dropdown for language selection
    const languageSelector = document.createElement('select');
    languageSelector.id = 'languageSelector';
    const languages = ['en', 'es', 'fr','hi','zh']; // Add more languages as needed
    languages.forEach(lang => {
        const option = document.createElement('option');
        option.value = lang;
        option.textContent = lang.toUpperCase();
        languageSelector.appendChild(option);
    });

    // Append the language selector to a target element
    const container = document.querySelector('.footer-inner');
    if (container) {
        container.appendChild(languageSelector);
    }

    // Add event listener for language change
    languageSelector.addEventListener('change', function() {
        const selectedLanguage = this.value;
        translatePage(selectedLanguage);
    });
});

function translateTextNodes(element, translations, startIndex = 0) {
    let index = startIndex;
    for (let child of element.childNodes) {
        if (child.nodeType === Node.TEXT_NODE && child.textContent.trim() !== "") {
            child.textContent = translations[index++];
        } //else if (child.nodeType === Node.ELEMENT_NODE) {
           // index = translateTextNodes(child, translations, index);
        //}
    }
    return index;
}

function translatePage(targetLanguage) {

    const div = document.querySelector('div.row');
    const textNodes = div.querySelectorAll('p, h1, h2, h3, h4, h5, h6, a, span, li, td, th');
    const texts = [];

    textNodes.forEach(node => {
        node.childNodes.forEach(child => {
            if (child.nodeType === Node.TEXT_NODE && child.textContent.trim() !== "") {
                texts.push(child.textContent.trim());
            }
        });
    });

    // Send the texts for translation
    fetch('http://localhost:3000/translate', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            texts: texts,
            targetLanguage: targetLanguage
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.translations && Array.isArray(data.translations)) {
            let startIndex = 0;
            textNodes.forEach(node => {
               startIndex =  translateTextNodes(node, data.translations,startIndex);
            });
        }
    })
    .catch(error => {
        console.error('Error translating:', error);
    });
}
</script>

</html>