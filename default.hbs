<!DOCTYPE html>
<html lang="{{@site.locale}}" class="{{#if @custom.enable_dark_mode}} is-darkModeAdminSetting-enabled {{/if}}">

<!-- Weglot translations -->
{{!-- <link rel="alternate" hreflang="x-default" href="https://www.attirer.io">
<link rel="alternate" hreflang="en" href="https://www.attirer.io">
<link rel="alternate" hreflang="fr" href="https://fr.attirer.io">
<link rel="alternate" hreflang="de" href="https://de.attirer.io">
<link rel="alternate" hreflang="pt" href="https://pt.attirer.io">
<link rel="alternate" hreflang="es" href="https://es.attirer.io">
<link rel="alternate" hreflang="zh" href="https://zh.attirer.io">
<link rel="alternate" hreflang="ar" href="https://ar.attirer.io">
<link rel="alternate" hreflang="ja" href="https://ja.attirer.io">
<link rel="alternate" hreflang="ko" href="https://ko.attirer.io">
<link rel="alternate" hreflang="tr" href="https://tr.attirer.io">
<link rel="alternate" hreflang="zh-tw" href="https://zh-tw.attirer.io">
<link rel="alternate" hreflang="it" href="https://it.attirer.io">
<link rel="alternate" hreflang="th" href="https://th.attirer.io">
<link rel="alternate" hreflang="id" href="https://id.attirer.io">
<link rel="alternate" hreflang="nl" href="https://nl.attirer.io">
<link rel="alternate" hreflang="hi" href="https://hi.attirer.io">
<script type="text/javascript" src="https://cdn.weglot.com/weglot.min.js">
</script>
<script>
    Weglot.initialize({
        api_key: 'wg_277f3f59c1cd31ddb4b9c7b5b4acaf8a9'
    });
</script> --}}

<head>

   {{!-- Document Settings --}}
    <meta charset="utf-8">
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />     
    {{!-- Base Meta --}}   
    <title>{{meta_title}}</title>
   
    {{!-- Styles'n'Scripts --}}      
    {{!-- <link rel="stylesheet" href="{{asset "built/screen.css"}}">
    <link rel="stylesheet" type="text/css" href="{{asset "built/theme.css"}}" /> --}}
    <link rel="stylesheet" type="text/css" href="{{asset "built/main.css"}}" />
   
  {{!-- <link rel="preconnect" href="https://fonts.gstatic.com">
   <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet">  --}}


  {{#if @custom.enable_dark_mode}}
    {{> dark-mode-accent-color }}
    {{> dark-mode-js }}
  {{/if}}

  <script>
    var pagination_next_page_number       = '{{ pagination.next }}',
        pagination_available_pages_number = '{{ pagination.pages }}',
        pagination_loading_text           = '{{t "Loading" }}',
        pagination_more_posts_text        = '{{t "Load More" }}',
        dark_mode_label_text              = '{{t "Dark" }}',
        light_mode_label_text             = '{{t "Light" }}';

    document.documentElement.classList.add('js-on');
  </script>

    {{ghost_head}}

</head>
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=AW-10857397969"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'AW-10857397969');
</script>
<body class="{{body_class}}{{{block "body_class"}}}">
    <div class="site">

        {{> header}}
        <div class="site-content">
            {{{body}}}
        </div>
        {{> footer}}
    </div>

    {{> off-canvas}}
    {{> pswp}}

<script src="https://code.jquery.com/jquery-3.3.1.min.js"
        integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous">
        </script>
   <script src="{{asset "built/main.min.js"}}"></script>
   
   {{!-- Start of My Blog: scripts --}}
   <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.22.0/prism.min.js" integrity="sha512-9+422Bs3A87UkWfp+qV80Nfv9arhbCXKY1rxrF2seorI36mIIstMiuBfyKLF1yH1nnzQkEWq2xrzT4XU3Z+vrA==" crossorigin="anonymous"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.22.0/plugins/autoloader/prism-autoloader.min.js" integrity="sha512-Q3qGP1uJL/B0sEmu57PKXjCirgPKMbg73OLRbTJ6lfHCVU5zkHqmcTI5EV2fSoPV1MHdKsCBE7m/aS6q0pPjRQ==" crossorigin="anonymous"></script>
   <script src="https://unpkg.com/mermaid@8.8.0/dist/mermaid.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/tocbot/4.12.0/tocbot.min.js" integrity="sha512-oD3xGN8YTxenx6tdS4D/RKqO4OtORBQtAb2/FseM17GGMIi6jMwKUBc8duX4A5RwMOGGXoFBZrsqbOk8GpXFgQ==" crossorigin="anonymous"></script>   
   <script type="text/javascript">
      tocbot.init({
         tocSelector: '.post-toc',
         contentSelector: '.post-content',
         hasInnerContainers: true,
//         positionFixedClass: '.sidebar-column',      
      });
      
      mermaid.initialize({
         startOnLoad: true,
         theme: 'dark'
      });
   </script> 

    {{{block "scripts"}}}
    
    {{ghost_foot}}
</body>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Create a dropdown for language selection
    const languageSelector = document.createElement('select');
    languageSelector.id = 'languageSelector';
    const contents = [
        {option:'English',language:'en'},
        {option:'French',language:'fr'},
        {option:'Deutsch',language:'de'},
        {option:'Español',language:'es'},
        {option:'Portugués',language:'pt'},
        {option:'Nederlands',language:'nl'},
        {option:'Italiano',language:'it'},
        {option:'हिंदी',language:'hi'}
    ];

    contents.forEach(lang => {
        const option = document.createElement('option');
        option.value = lang.language;
        option.textContent = lang.option.toUpperCase();
        languageSelector.appendChild(option);
    });


//document.getElementById('languageSelector')
languageSelector.addEventListener('change', function() {
    const selectedSubdomain = this.value;
    const currentPath = window.location.pathname;
    const currentQueryString = window.location.search;

    // Construct the new URL based on the selected subdomain
    const newURL = `https://${selectedSubdomain}.attirer.io${currentPath}${currentQueryString}`;

    // Redirect to the new URL
    window.location.href = newURL;
});


    // Append the language selector to a target element
    const container = document.querySelector('.c-header__top-left');
    if (container) {
        container.appendChild(languageSelector);
    }

    // Function to get the subdomain from the current URL
    function getSubdomain(hostname) {
        const parts = hostname.split('.');
        if (parts.length > 2) {
            return parts[0];
        }
        return null;
    }

    // Get current subdomain
    const currentSubdomain = getSubdomain(window.location.hostname);

    // If the current subdomain matches a language code, set the dropdown value and translate the page
    if (contents.some(lang => lang.language === currentSubdomain)) {
        languageSelector.value = currentSubdomain;
        translatePage(currentSubdomain);
    }


});

function translateTextNodes(element, translations, startIndex = 0) {
    let index = startIndex;
    for (let child of element.childNodes) {
        if (child.nodeType === Node.TEXT_NODE && child.textContent.trim() !== "") {
            child.textContent = translations[index++];
        }
    }
    return index;
}

function translatePage(targetLanguage) {
    const div = document.querySelector('div.site-content');
    const textNodes = div.querySelectorAll('p, h1, h2, h3, h4, h5, h6, a, span, li, td, th');
    const texts = [];

    textNodes.forEach(node => {
        node.childNodes.forEach(child => {
            if (child.nodeType === Node.TEXT_NODE && child.textContent.trim() !== "") {
                texts.push(child.textContent.trim());
            }
        });
    });

    // Send the texts for translation
    fetch('https://arboreal-lyceum-391207.as.r.appspot.com/translate', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            texts: texts,
            targetLanguage: targetLanguage
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.translations && Array.isArray(data.translations)) {
            let startIndex = 0;
            textNodes.forEach(node => {
                startIndex =  translateTextNodes(node, data.translations, startIndex);
            });
        }
    })
    .catch(error => {
        console.error('Error translating:', error);
    });
}


</script>

</html>